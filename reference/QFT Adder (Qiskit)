from qiskit import QuantumRegister, ClassicalRegister, QuantumCircuit
from numpy import pi

qreg_q = QuantumRegister(8, 'q')

circuit = QuantumCircuit(qreg_q)

circuit.h(qreg_q[7])
circuit.cp(pi / 8, qreg_q[4], qreg_q[7])
circuit.cp(pi / 4, qreg_q[5], qreg_q[7])
circuit.cp(pi / 2, qreg_q[6], qreg_q[7])
circuit.h(qreg_q[6])
circuit.cp(pi / 4, qreg_q[4], qreg_q[6])
circuit.cp(pi / 2, qreg_q[5], qreg_q[6])
circuit.h(qreg_q[5])
circuit.cp(pi / 2, qreg_q[4], qreg_q[5])
circuit.h(qreg_q[4])
circuit.swap(qreg_q[5], qreg_q[6])
circuit.swap(qreg_q[4], qreg_q[7])
circuit.barrier(qreg_q[0], qreg_q[1], qreg_q[2], qreg_q[3], qreg_q[4], qreg_q[5], qreg_q[6], qreg_q[7])
circuit.cz(qreg_q[0], qreg_q[4])
circuit.cz(qreg_q[1], qreg_q[4])
circuit.cz(qreg_q[2], qreg_q[4])
circuit.cz(qreg_q[3], qreg_q[4])
circuit.cz(qreg_q[1], qreg_q[5])
circuit.cz(qreg_q[2], qreg_q[5])
circuit.cz(qreg_q[3], qreg_q[5])
circuit.cz(qreg_q[2], qreg_q[6])
circuit.cz(qreg_q[3], qreg_q[6])
circuit.cz(qreg_q[3], qreg_q[7])
circuit.barrier(qreg_q[0], qreg_q[1], qreg_q[2], qreg_q[3], qreg_q[4], qreg_q[5], qreg_q[6], qreg_q[7])
circuit.swap(qreg_q[4], qreg_q[7])
circuit.h(qreg_q[4])
circuit.swap(qreg_q[5], qreg_q[6])
circuit.cp(pi / 2, qreg_q[4], qreg_q[5])
circuit.h(qreg_q[5])
circuit.cp(pi / 2, qreg_q[5], qreg_q[6])
circuit.cp(pi / 4, qreg_q[4], qreg_q[6])
circuit.h(qreg_q[6])
circuit.cp(pi / 2, qreg_q[6], qreg_q[7])
circuit.cp(pi / 4, qreg_q[5], qreg_q[7])
circuit.cp(pi / 8, qreg_q[4], qreg_q[7])
circuit.h(qreg_q[7])
# @columns [0,1,2,3,4,5,6,7,8,9,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,24,25,26,27,28,29,30,31,32,33]
