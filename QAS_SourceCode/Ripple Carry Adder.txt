import numpy as np

# Importing standard Qiskit libraries
from qiskit import QuantumCircuit, transpile, Aer, IBMQ
from qiskit.tools.jupyter import *
from qiskit.visualization import *
from ibm_quantum_widgets import *
from qiskit.providers.aer import QasmSimulator

# Loading your IBM Quantum account(s)
provider = IBMQ.load_account()

qc = QuantumCircuit(6)
#input------------------------------------------
qc.x(1) #a0
qc.x(2) #a1
qc.x(3) #b0
qc.x(4) #b1
#------------------------------------------------
qc.cx(3,1)
qc.cx(1,0)
qc.cx(2,4)
qc.ccx(0,3,1)
qc.cx(2,1)
qc.ccx(1,4,2)
qc.cx(2,5)
qc.ccx(1,4,2)
qc.cx(2,1)
qc.cx(4,1)
qc.ccx(0,4,1)
qc.cx(1,0)
qc.cx(0,3)
qc.measure_all()
qc.draw()


#Real Device
provider = IBMQ.get_provider(hub ='ibm-q', group='open', project='main')
backend = provider.get_backend('ibmq_jakarta')
re_transpile=transpile(qc, backend)
re_transpile.draw(output='mpl', idle_wires=False)
job = execute(re_transpile, backend)
result = job.result()
counts = result.get_counts(re_transpile)
print("Result",counts)
re_transpile.draw()


# Simulator : simulator에서 transpile이 작동하지 않는다. 모든 회로가 Basic gate이기에 바로 실행되기 때문
# import numpy as np
# from qiskit import QuantumCircuit
# from qiskit import Aer, transpile
# from qiskit.tools.visualization import plot_histogram, plot_state_city
# import qiskit.quantum_info as qi
# simulator = Aer.get_backend('aer_simulator')
# qc = transpile(qc, simulator)
# qc.draw()
# result = simulator.run(qc).result()
# counts = result.get_counts(qc)
# plot_histogram(counts, title='Ripple Carry Adder')
